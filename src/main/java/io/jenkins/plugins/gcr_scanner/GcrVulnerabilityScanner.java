package io.jenkins.plugins.gcr_scanner;

import com.google.api.gax.core.FixedCredentialsProvider;
import com.google.auth.oauth2.AccessToken;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.devtools.containeranalysis.v1.ContainerAnalysisClient;
import com.google.cloud.devtools.containeranalysis.v1.ContainerAnalysisSettings;
import com.google.gson.Gson;
import hudson.Launcher;
import hudson.model.TaskListener;
import io.grafeas.v1.GrafeasClient;
import io.grafeas.v1.Occurrence;
import io.grafeas.v1.ProjectName;
import java.io.ByteArrayOutputStream;
import java.util.ArrayList;
import java.util.Date;

public class GcrVulnerabilityScanner {

    public ArrayList<Occurrence> run(String resourceUrl, String projectId, TaskListener taskListener, Launcher launcher) {
        try {
            ByteArrayOutputStream out = new ByteArrayOutputStream();
            ByteArrayOutputStream err = new ByteArrayOutputStream();
            int status = launcher.launch()
                    .cmdAsSingleString("gcloud auth application-default print-access-token --format=json")
                    .stdout(out)
                    .stderr(err).join();
            taskListener.getLogger().println("The status of gcloud statement is " + status);
            if(status == 0) {
                Gson gson = new Gson();
                TempAccessToken tempAccessToken = gson.fromJson(out.toString(), TempAccessToken.class);
                taskListener.getLogger().printf("The Token is = %s******\n", tempAccessToken.getAccess_token().substring(0, 10));
                taskListener.getLogger().println("Creating GrafeasClient now...");
                Date expirationDate = new Date(System.currentTimeMillis() + tempAccessToken.getExpires_in() * 1000);
                GoogleCredentials credentials = GoogleCredentials.create(new AccessToken(tempAccessToken.getAccess_token(), expirationDate));
                ContainerAnalysisSettings settings = ContainerAnalysisSettings.newBuilder()
                        .setCredentialsProvider(FixedCredentialsProvider.create(credentials))
                        .build();
                GrafeasClient client = ContainerAnalysisClient
                        .create(settings)
                        .getGrafeasClient();
                taskListener.getLogger().println("Created GrafeasClient...");
                final String projectName = ProjectName.format(projectId);
                String filterStr = String.format("kind=\"VULNERABILITY\" AND resourceUrl=\"%s\"", resourceUrl);

                ArrayList<Occurrence> vulnerabilitylist = new ArrayList<>();
                taskListener.getLogger().println("Creating request for list occurrences...");
                GrafeasClient.ListOccurrencesPagedResponse response = client.listOccurrences(projectName, filterStr);
                taskListener.getLogger().println("List occurrences API call responded...");
                for (Occurrence o : response.iterateAll()) {
                    vulnerabilitylist.add(o);
                }
                client.close();
                return vulnerabilitylist;
            } else {
                taskListener.error("The gcloud command failed with error = " + err);
            }
        } catch (Exception ex) {
            taskListener.error(ex.getLocalizedMessage());
        }
        taskListener.getLogger().println("Something went wrong while setting up GrafeasClient...");
        return new ArrayList<>();
    }
}
