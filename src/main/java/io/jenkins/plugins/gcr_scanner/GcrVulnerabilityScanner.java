package io.jenkins.plugins.gcr_scanner;

import com.google.api.gax.core.FixedCredentialsProvider;
import com.google.api.gax.rpc.FixedHeaderProvider;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.devtools.containeranalysis.v1.ContainerAnalysisClient;
import com.google.cloud.devtools.containeranalysis.v1.ContainerAnalysisSettings;
import hudson.Launcher;
import hudson.model.TaskListener;
import io.grafeas.v1.GrafeasClient;
import io.grafeas.v1.GrafeasSettings;
import io.grafeas.v1.Occurrence;
import io.grafeas.v1.ProjectName;
import java.io.ByteArrayOutputStream;
import java.util.ArrayList;
import java.util.HashMap;

public class GcrVulnerabilityScanner {

    public ArrayList<Occurrence> run(String resourceUrl, String projectId, TaskListener taskListener, Launcher launcher) {
        try {
            ByteArrayOutputStream out = new ByteArrayOutputStream();
            ByteArrayOutputStream err = new ByteArrayOutputStream();
            int status = launcher.launch()
                    .cmdAsSingleString("gcloud auth application-default print-access-token")
                    .stdout(out)
                    .stderr(err).join();
            taskListener.getLogger().println("The status of gcloud statement is " + status);
            if(status == 0) {
                taskListener.getLogger().printf("The Token is = %s******\n", out.toString().substring(0, 10));
                HashMap<String, String> headers = new HashMap<>();
                headers.put("Authorization", "Bearer " + out.toString());

                ContainerAnalysisSettings containerAnalysisSettings = ContainerAnalysisSettings
                        .newBuilder()
                        .setHeaderProvider(FixedHeaderProvider.create(headers))
                        .build();
                String endpoint = containerAnalysisSettings.getEndpoint();
                taskListener.getLogger().printf("Creating GrafeasClient now for %s...\n", endpoint);
                GrafeasClient client = ContainerAnalysisClient
                        .create(containerAnalysisSettings)
                        .getGrafeasClient();
                taskListener.getLogger().println("Created GrafeasClient...");

                final String projectName = ProjectName.format(projectId);
                String filterStr = String.format("kind=\"VULNERABILITY\" AND resourceUrl=\"%s\"", resourceUrl);

                ArrayList<Occurrence> vulnerabilitylist = new ArrayList<Occurrence>();
                taskListener.getLogger().println("Creating request for list occurrences...");
                GrafeasClient.ListOccurrencesPagedResponse response = client.listOccurrences(projectName, filterStr);
                taskListener.getLogger().println("List occurrences API call responded...");
                for (Occurrence o : response.iterateAll()) {
                    vulnerabilitylist.add(o);
                }
                return vulnerabilitylist;
            } else {
                taskListener.error("The gcloud command failed with error = " + err);
            }
        } catch (Exception ex) {
            taskListener.error(ex.getLocalizedMessage());
        }
        taskListener.getLogger().println("Something went wrong...");
        return new ArrayList<>();
    }
}
